setenv bootargs ''

setenv initrd_high 0xffffffff
a_base=0x10000000


setexpr a_zImage  ${a_base} + 0x02000000
setexpr a_fdt     ${a_base} + 0x08000000
setexpr a_uTee    ${a_base} + 0x10000000


if itest.s "x" == "x${board}" ; then
	echo "!!!! Error: Your u-boot is outdated. Please upgrade.";
	exit;
fi

if itest.s "x" == "x${fdt_file}" ; then
	fdt_file=imx6q-${board}.dtb;
fi

if itest.s x${distro_bootpart} == x ; then
	distro_bootpart=1
fi

if tftp ${a_fdt} ${serverip}:${fdt_file} ; then
	fdt addr ${a_fdt}
	setenv fdt_high 0xffffffff
else
	echo "!!!! Error loading ${prefix}${fdt_file}";
	exit;
fi

fdt resize
if itest.s "x" != "x${cmd_custom}" ; then
	run cmd_custom
fi


if itest.s x${rfspart} == x ; then
	rfspart=1
fi

if itest.s "x" == "x${root}"; then
	part uuid ${devtype} ${devnum}:${rfspart} uuid
	if itest.s "x" != "x${uuid}"; then
		root=PARTUUID=${uuid}
	elif test "sata" = "${devtype}" || test "usb" = "${devtype}" ; then
		root=/dev/sda${rfspart}
	else
		root=/dev/mmcblk${devnum}p${rfspart}
	fi
fi

if itest.s "x" == "x$cma" ; then
	cma=256M
fi

if itest.s "x" == "x$vmalloc" ; then
	vmalloc=400M
fi

if itest.s "x" != "x$show_fdt" ; then
	fdt print /
fi

if itest.s "x" != "x$show_env" ; then
	printenv
fi

setenv bootargs "$bootargs console=${console},115200 vmalloc=${vmalloc}"
setenv bootargs "$bootargs cma=${cma} consoleblank=0 root=${root} rootwait rw"

if itest.s "x" != "x${loglevel}" ; then
	setenv bootargs ${bootargs} loglevel=${loglevel}
fi


if tftp ${a_zImage} ${serverip}:zImage ; then
	echo "bootscript-optee: zImage loaded"
	if tftp ${a_uTee} ${serverip}:uTee ; then
		echo "bootscript-optee: uTee loaded"
		echo "network boot succeeded"
		echo "bootm command"
		bootm ${a_uTee} - ${a_fdt}
	fi
fi
echo "Error loading kernel image"
